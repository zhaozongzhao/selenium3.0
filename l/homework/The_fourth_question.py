# 简要描述Python的垃圾回收机制（garbage collection）

'''
   python采用的是引用计数机制为主，标记-清除和分代收集两种机制为辅的策略
   python里每一个东西都是对象,当一个对象有新的引用时，它的ob_refcnt就会增加，当引用它的对象被删除，它的ob_refcnt就会减少
当引用计数为0时，该对象生命就结束了.
引用计数机制的优点
  1.简单
  2.实用性，一旦没有引用，内存直接释放
引用计数机制的缺点：
  1.维护引用计数需要消耗资源
  2.循环引用
Generational GC算法  Python使用一种不同的链表来持续追踪活跃的对象。每次当你创建一个对象或其他什么值的时候，Python会将
其加入零代链表，Python会循环遍历零代列表上的每个对象，检查列表中每个互相引用的对象，根据规则减掉其引用计数，Python会一个接一个
的统计内部引用的数量以防过早地释放对象









'''